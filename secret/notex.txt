1. Secret method-1
    --- kind create cluster --config 01-cluster.yaml
    --- watch -t -x kubectl get all
    --- kubectl get secret
    --- kubectl create secret generic my-secret --from-literal=username=arafin --from-literal=password=123
    --- kubectl get secret
        NAME        TYPE     DATA   AGE
        my-secret   Opaque   2      22s
    --- kubectl get secret my-secret -o yaml, we will get output like that: 
        apiVersion: v1
        data:
        password: MTIz
        username: YXJhZmlu
        kind: Secret
        metadata:
        creationTimestamp: "2024-01-29T18:00:39Z"
        name: my-secret
        namespace: default
        resourceVersion: "19051"
        uid: b01d7647-07c4-4f69-aa96-b3bef7ac83b0
        type: Opaque

    --- kubectl delete secret my-secret

2. Secret method-2
    --- kind create cluster --config 01-cluster.yaml
    --- watch -t -x kubectl get all
    --- kubectl get secret
    --- create yaml file as 02-simple-secret.yaml
    --- we need to encode the username and password: echo -n arafin | base64 and also for password as : echo -n 123 | base64
    --- we need to place these two values into yaml file for username and password
    --- kubectl apply -f 02-simple-secret.yaml
    --- kubectl get secret
    --- kubectl get secret app-secret -o yaml
        apiVersion: v1
        data:
        password: MTIz
        username: YXJhZmlu
        kind: Secret
        metadata:
        annotations:
            kubectl.kubernetes.io/last-applied-configuration: |
            {"apiVersion":"v1","data":{"password":"MTIz","username":"YXJhZmlu"},"kind":"Secret","metadata":{"annotations":{},"name":"app-secret","namespace":"default"}}
        creationTimestamp: "2024-01-29T18:16:46Z"
        name: app-secret
        namespace: default
        resourceVersion: "20499"
        uid: c9ff5801-c8b3-4dcb-9ad4-96a3100e0266
        type: Opaque
    --- kubectl get pod my-pod
    --- kubectl logs my-pod
        PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
        HOSTNAME=my-pod
        app_username=arafin
        app_password=123
        KUBERNETES_PORT_443_TCP_PORT=443
        KUBERNETES_PORT_443_TCP_ADDR=10.96.0.1
        KUBERNETES_SERVICE_HOST=10.96.0.1
        KUBERNETES_SERVICE_PORT=443
        KUBERNETES_SERVICE_PORT_HTTPS=443
        KUBERNETES_PORT=tcp://10.96.0.1:443
        KUBERNETES_PORT_443_TCP=tcp://10.96.0.1:443
        KUBERNETES_PORT_443_TCP_PROTO=tcp
        HOME=/root

        we can see that my pod received the decoded value of username and password as app_username=arafin and app_password=123

    --- kubectl delete -f 02-simple-secret.yaml

3. Secret Injected as Env Inside Pod
    --- kind create cluster --config 01-cluster.yaml
    --- watch -t -x kubectl get all
    --- kubectl get secret
    --- create yaml file as 03-secret-injected-as-env-inside-pod.yaml
    --- we need to encode the username and password: echo -n arafin | base64 and also for password as : echo -n 123 | base64
    --- we need to place these two values into yaml file for username and password
    --- kubectl apply -f 03-secret-injected-as-env-inside-pod.yaml
    --- kubectl get secret
    --- kubectl get secret app-secret -o yaml
        apiVersion: v1
        data:
        password: MTIz
        username: YXJhZmlu
        kind: Secret
        metadata:
        annotations:
            kubectl.kubernetes.io/last-applied-configuration: |
            {"apiVersion":"v1","data":{"password":"MTIz","username":"YXJhZmlu"},"kind":"Secret","metadata":{"annotations":{},"name":"app-secret","namespace":"default"}}
        creationTimestamp: "2024-01-29T18:16:46Z"
        name: app-secret
        namespace: default
        resourceVersion: "20499"
        uid: c9ff5801-c8b3-4dcb-9ad4-96a3100e0266
        type: Opaque
    --- kubectl get pod my-pod
    --- kubectl logs my-pod
        PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
        HOSTNAME=my-pod
        username=arafin
        password=123
        KUBERNETES_PORT_443_TCP_PORT=443
        KUBERNETES_PORT_443_TCP_ADDR=10.96.0.1
        KUBERNETES_SERVICE_HOST=10.96.0.1
        KUBERNETES_SERVICE_PORT=443
        KUBERNETES_SERVICE_PORT_HTTPS=443
        KUBERNETES_PORT=tcp://10.96.0.1:443
        KUBERNETES_PORT_443_TCP=tcp://10.96.0.1:443
        KUBERNETES_PORT_443_TCP_PROTO=tcp
        HOME=/root

        we can see that my pod received the decoded value of username and password as app_username=arafin and app_password=123

    --- kubectl delete -f 03-secret-injected-as-env-inside-pod.yaml


4. Secret Injected as File Inside Pod
    --- kind create cluster --config 01-cluster.yaml
    --- watch -t -x kubectl get all
    --- kubectl get secret
    --- create yaml file as 04-secret-injected-as-file-inside-pod.yaml
    --- we need to create a file like "application.properties" or any file you can create
    --- we are in secret folder path. then run command as " sudo docker run -it -v $PWD:/ws ubuntu "
    --- now go to ws directory and we will see our files as :
        01-cluster.yaml        03-secret-injected-as-env-inside-pod.yaml   application.properties
        02-simple-secret.yaml  04-secret-injected-as-file-inside-pod.yaml  notex.txt

    --- now we want to make "application.properties" file as our secret file. so write command as : cat application.properties | base64
        and we will get encoded value as   dXNlcm5hbWU9YXJhZmluCnBhc3N3b3JkPTEyMw== . Copy and paste this value to our. 
        04-secret-injected-as-file-inside-pod.yaml file under app.key section and It will be looks like
            app.key: |
               dXNlcm5hbWU9YXJhZmluCnBhc3N3b3JkPTEyMw==

    --- kubectl apply -f 04-secret-injected-as-file-inside-pod.yaml
    --- kubectl get secret
    --- kubectl get secret app-secret -o yaml
        apiVersion: v1
        data:
        app.key: dXNlcm5hbWU9YXJhZmluCnBhc3N3b3JkPTEyMw==
        kind: Secret
        metadata:
        annotations:
            kubectl.kubernetes.io/last-applied-configuration: |
            {"apiVersion":"v1","data":{"app.key":"dXNlcm5hbWU9YXJhZmluCnBhc3N3b3JkPTEyMw==\n"},"kind":"Secret","metadata":{"annotations":{},"name":"app-secret","namespace":"default"}}
        creationTimestamp: "2024-01-29T19:08:18Z"
        name: app-secret
        namespace: default
        resourceVersion: "25185"
        uid: 63847c12-67fa-4580-9d12-7489a5a868b8
        type: Opaque
    --- kubectl get pod my-pod
    --- kubectl exec -it my-pod -- bash
    --- cd usr/share/props/ and we will see our app.key and if we write command as : cat app.key
        it will display 
        username=arafin
        password=123

    --- kubectl delete -f 04-secret-injected-as-file-inside-pod.yaml